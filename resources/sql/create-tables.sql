drop table if exists service_binding;
drop table if exists service_instance;
drop table if exists iaas_instance;

create table iaas_instance
(
    id                 integer          not null primary key auto_increment,
    internal_id        char(128) unique not null,                        -- the id that represents the created service on the IaaS
    status             char(128)        not null,
    last_status_update timestamp        not null,
    last_message       text(2048)       not null,
    service_url        text(1024)       not null,                        -- for a database, this could be the URL
    service_user       char(128)        not null default 'unknown_user', -- the user required to login to the database or other service
    service_password   text(1024)       not null                         -- the password to login to the database or other service
);

create table service_instance
(
    id                integer         not null primary key auto_increment,
    instance_id       char(36) unique not null, -- the guid generated by the CC
    service_id        char(36)        not null, -- the guid from the catalog (services.id)
    plan_id           char(36)        not null, -- the guid from the catalog (services.plans.id)
    parameters        text(2048),               -- the optional parameters in json given with the -c option of cf-create-service
    env               char(5)         not null, -- the identifier of the Cloud Foundry foundation
    organization_name char(128)       not null, -- coming from context in the request body
    space_name        char(128)       not null, -- coming from context in the request body
    instance_name     char(128)       not null, -- coming from context in the request body
    iaas_instance_id  integer         not null,
    status            char(16)        not null check ( status in ('succeeded', 'failed', 'in progress')),
    last_update       timestamp on update current_timestamp default current_timestamp,
    unique key (env, iaas_instance_id),
    constraint service2iaas foreign key (iaas_instance_id) references iaas_instance (id) on delete cascade
);

create table service_binding
(
    id                  integer         not null primary key auto_increment,
    service_binding_id  char(36) unique not null, -- the guid generated by the CC
    service_instance_id char(36)        not null,
    constraint binding2service foreign key (service_instance_id) references service_instance (instance_id) on delete cascade
);
